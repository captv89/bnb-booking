{{template "base" .}}

{{define "title"}}
B8B Booking
{{end}}

{{define "content"}}
<main class="flex-fill">
    <div class="container top-space">
        <h1 class="mt-5 text-center">Search Availability</h1>
        <form action="book.html" method="get" class="row g-3 mt-2 needs-validation" novalidate>
            <div class="row mt-5 text-center">
                <div class="col">
                    <div id="reservation-dates">
                        <div class="row">
                            <div class="col">
                                <input class="form-control" type="text" name="start" placeholder="Check-In" required>
                            </div>
                            <div class="col">
                                <input class="form-control" type="text" name="end" placeholder="Check-Out" required>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 text-center">
                <button type="submit" class="btn btn-primary">Search Availability</button>
            </div>
        </form>
    </div>
    <button id="new-toast" onclick="attention.popmsg({msg:'Oops! Something went wrong.', icon:'error'})">Alert</button>
</main>
{{end}}

{{define "js"}}
<!-- Custom Script -->
<script>
    let attention = Prompt();
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
    })()

    // Date picker
    const elem = document.getElementById('reservation-dates');
    const rangepicker = new DateRangePicker(elem, {
        format: "dd-mm-yyyy",
        todayBtn: "true",
        clearBtn: "true",
        buttonClass: "btn",
        calendarWeeks: "true",
        minDate: "today",
    });

    // Notify
    function notify(type, msg) {
        notie.alert({
            type: type,
            text: msg,
            time: 3
        });
    }

    // Modal Sweet Alert
    function Prompt() {
        // Toast function
        const toast = function (c) {
            const {
                msg = "",
                icon = "success",
                position = "top-end"
            } = c;

            const Toast = Swal.mixin({
                toast: true,
                position: position,
                icon: icon,
                title: msg,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })
            Toast.fire({})
        }
        // Popup function
        const popmsg = function (c) {
            const {
                msg = "",
                icon = "success",
                title = "",
                btnText = "OK",
                type = "text"
            } = c;
            if (type === 'text') {
                Swal.fire({
                    icon: icon,
                    title: title,
                    text: msg,
                    confirmButtonText: btnText
                })
            } else {
                Swal.fire({
                    icon: icon,
                    title: title,
                    html: msg,
                    confirmButtonText: btnText
                })
            }
        }

        return {
            toast: toast,
            popmsg: popmsg
        }

    }
</script>
{{end}}